{
	"info": {
		"_postman_id": "4cfbbd7c-dd36-4401-ad2d-151cbb2e81e6",
		"name": "DemoShopping",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41165538",
		"_collection_link": "https://www.postman.com/elizkaaaa/my-workspace/collection/jg2wiet/demoshopping?action=share&source=collection_link&creator=41165538"
	},
	"item": [
		{
			"name": "Products",
			"item": [
				{
					"name": "Возвращает список всех продуктов",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"All objects in array have correct data types\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Проходим по каждому элементу массива\r",
									"    jsonData.forEach(function(item) {\r",
									"        // Проверяем тип данных для каждого поля\r",
									"        pm.expect(item).to.have.property(\"product_id\").that.is.a(\"number\");\r",
									"        pm.expect(item).to.have.property(\"name\").that.is.a(\"string\");\r",
									"        pm.expect(item).to.have.property(\"description\").that.is.a(\"string\");\r",
									"        pm.expect(item).to.have.property(\"price\").that.is.a(\"string\");\r",
									"        pm.expect(item).to.have.property(\"category\").that.is.a(\"string\");\r",
									"        pm.expect(item).to.have.property(\"manufacturer\").that.is.a(\"string\");\r",
									"        pm.expect(item).to.have.property(\"imageUrl\").that.is.a(\"string\");\r",
									"        pm.expect(item).to.have.property(\"freeShipping\").that.is.a(\"number\");\r",
									"    }); // \r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"\tpm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Each object has 'price' as a string\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    jsonData.forEach(function(item) {\r",
									"        pm.expect(item).to.have.property(\"price\").that.is.a(\"string\");\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"All 'product_id' values are unique\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var productIds = jsonData.map(function(item) {\r",
									"        return item.product_id;\r",
									"    });\r",
									"    var uniqueProductIds = new Set(productIds);\r",
									"    pm.expect(uniqueProductIds.size).to.eql(productIds.length);\r",
									"});\r",
									"\r",
									"pm.test(\"Total price is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedTotal = jsonData.reduce(function(acc, item) {\r",
									"        return acc + item.price;  // предполагаем, что цена числовая\r",
									"    }, 0);\r",
									"    pm.expect(jsonData.totalPrice).to.eql(expectedTotal);\r",
									"});\r",
									"\r",
									"pm.test(\"Pagination returns the correct number of items per page\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var pageSize = 20;  // предположим, что страница должна содержать 20 товаров\r",
									"    pm.expect(jsonData.length).to.eql(pageSize);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/products",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление нового продукта",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Product is successfully added and ID is returned\", function () {\r",
									"      var responseBody = pm.response.text();\r",
									"    pm.expect(responseBody).to.include(\"Продукт успешно добавлен с ID:\");\r",
									"    });\r",
									"\r",
									"pm.test(\"ID is a positive number\", function () {\r",
									"    var responseBody = pm.response.text();\r",
									"    var idMatch = responseBody.match(/ID:\\s*(\\d+)/); // Находим ID в ответе\r",
									"    pm.expect(idMatch).to.not.be.null; // Убеждаемся, что ID найден\r",
									"    var id = parseInt(idMatch[1], 10); // Преобразуем ID в число\r",
									"    pm.expect(id).to.be.a(\"number\").and.to.be.above(0); // Проверяем, что это положительное число\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains a valid ID\", function () {\r",
									"    var responseBody = pm.response.text();\r",
									"    var idMatch = responseBody.match(/ID:\\s*(\\d+)/);\r",
									"    pm.expect(idMatch).to.not.be.null; // Проверяем, что ID существует\r",
									"});\r",
									"\r",
									"pm.test(\"Product ID is unique\", function () {\r",
									"    var responseBody = pm.response.text();\r",
									"    var idMatch = responseBody.match(/ID:\\s*(\\d+)/);\r",
									"    var newId = parseInt(idMatch[1], 10);\r",
									"\r",
									"    // Получаем сохранённые ID\r",
									"    var previousIds = pm.collectionVariables.get(\"productIds\") || [];\r",
									"    pm.expect(previousIds).to.not.include(newId);\r",
									"\r",
									"    // Сохраняем текущий ID\r",
									"    previousIds.push(newId);\r",
									"    pm.collectionVariables.set(\"productIds\", previousIds);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n  \"description\": \"{{$randomPhrase}}\",\n  \"price\": {{$randomInt}},\n  \"category\": \"{{$randomProduct}}\",\n  \"manufacturer\": \"{{$randomCompanyName}}\",\n  \"imageUrl\": \"https://{{$randomWord}}.com/image.jpg\",\n  \"freeShipping\": {{$randomBoolean}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://qa.demoshopping.ru/add-product",
							"protocol": "https",
							"host": [
								"qa",
								"demoshopping",
								"ru"
							],
							"path": [
								"add-product"
							],
							"query": [
								{
									"key": "description",
									"value": "It boasts an advanced triple-camera system, including a 5x telephoto lens, delivering stunning photography and videography capabilities.",
									"disabled": true
								},
								{
									"key": "price",
									"value": "1000",
									"disabled": true
								},
								{
									"key": "category",
									"value": "Phone",
									"disabled": true
								},
								{
									"key": "manufacturer",
									"value": "Apple",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск товара по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"// Проверка наличия всех необходимых полей\r",
									"pm.test(\"Response contains all required fields\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.all.keys(\r",
									"        \"product_id\",\r",
									"        \"name\",\r",
									"        \"description\",\r",
									"        \"price\",\r",
									"        \"category\",\r",
									"        \"manufacturer\",\r",
									"        \"imageUrl\",\r",
									"        \"freeShipping\"\r",
									"    );\r",
									"});\r",
									"\r",
									"// Проверка типов данных\r",
									"pm.test(\"All fields have correct data types\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.product_id).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.name).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.description).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.price).to.match(/^\\d+(\\.\\d{2})?$/); // Проверка цены\r",
									"    pm.expect(jsonData.category).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.manufacturer).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.imageUrl).to.match(/^http(s)?:\\/\\/.+$/); // Проверка URL\r",
									"    pm.expect(jsonData.freeShipping).to.be.oneOf([0, 1]); // Логическое значение\r",
									"});\r",
									"\r",
									"// Проверка значения freeShipping\r",
									"pm.test(\"Free shipping value is valid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.freeShipping).to.be.oneOf([0, 1]);\r",
									"});\r",
									"\r",
									"// Проверка наличия продукта в системе\r",
									"pm.test(\"Product exists in the system\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var productId = jsonData.product_id;\r",
									"\r",
									"    // Проверяем, что baseUrl определен\r",
									"    var baseUrl = pm.environment.get(\"baseUrl\");\r",
									"    pm.expect(baseUrl).to.not.be.undefined;\r",
									"\r",
									"    pm.sendRequest({\r",
									"        url: baseUrl + \"/products/\" + productId,\r",
									"        method: \"GET\"\r",
									"    }, function (err, res) {\r",
									"        if (err) {\r",
									"            pm.expect.fail(\"Error in API request: \" + err.message);\r",
									"        } else {\r",
									"            pm.expect(res).to.have.property(\"status\", 200); // Продукт найден\r",
									"            pm.expect(res.json().product_id).to.equal(productId); // ID совпадает\r",
									"        }\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://qa.demoshopping.ru/products/id/19314",
							"protocol": "https",
							"host": [
								"qa",
								"demoshopping",
								"ru"
							],
							"path": [
								"products",
								"id",
								"19314"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление товара по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"\tpm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://qa.demoshopping.ru/products/id/18232",
							"protocol": "https",
							"host": [
								"qa",
								"demoshopping",
								"ru"
							],
							"path": [
								"products",
								"id",
								"18232"
							]
						}
					},
					"response": []
				},
				{
					"name": "Полное обновление товара по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains all required fields after update\", function () {\r",
									"    var jsonData = pm.response.text();\r",
									"    pm.expect(jsonData).to.have.all.keys(\"name\", \"description\", \"price\", \"category\", \"manufacturer\", \"imageUrl\", \"freeShipping\");\r",
									"});\r",
									"\r",
									"pm.test(\"Fields not updated remain unchanged\", function () {\r",
									"    var originalProductData = { /* начальные данные продукта */ };\r",
									"    var updatedProductData = pm.response.json();\r",
									"    \r",
									"    // Убедитесь, что все остальные поля остались неизменными\r",
									"    pm.expect(updatedProductData.someField).to.eql(originalProductData.someField);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Nameprodykta\",\n  \"description\": \"opisanie\",\n  \"price\": 2321,\n  \"category\": \"kategoriya\",\n  \"manufacturer\": \"sonyang\",\n  \"imageUrl\": \"asd\",\n  \"freeShipping\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://qa.demoshopping.ru/products/id/18297",
							"protocol": "https",
							"host": [
								"qa",
								"demoshopping",
								"ru"
							],
							"path": [
								"products",
								"id",
								"18297"
							]
						}
					},
					"response": []
				},
				{
					"name": "Частичное обновление по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Updated product data is correct\", function () {\r",
									"    var jsonData = pm.response.text();\r",
									"    \r",
									"    pm.expect(jsonData.name).to.equal(\"huawei\");\r",
									"    pm.expect(jsonData.description).to.equal(\"cool phone\");\r",
									"    pm.expect(jsonData.price).to.equal(520);\r",
									"    pm.expect(jsonData.category).to.equal(\"Phone\");\r",
									"    pm.expect(jsonData.manufacturer).to.equal(\"Huaw\");\r",
									"    pm.expect(jsonData.imageUrl).to.equal(\"examle.ru\");\r",
									"    pm.expect(jsonData.freeShipping).to.be.true;\r",
									"});\r",
									"\r",
									"\r",
									"  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"huawei\",\n  \"description\": \"cool phone\",\n  \"price\": 520,\n  \"category\": \"Phone\",\n  \"manufacturer\": \"Huaw\",\n  \"imageUrl\": \"examle.ru\",\n  \"freeShipping\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://qa.demoshopping.ru/products/id/18462",
							"protocol": "https",
							"host": [
								"qa",
								"demoshopping",
								"ru"
							],
							"path": [
								"products",
								"id",
								"18462"
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск товаров по категории",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/products/FindByCategory?category=Watches",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products",
								"FindByCategory"
							],
							"query": [
								{
									"key": "category",
									"value": "Watches"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск товаров по производителю",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/products/FindByManufacturer?manufacturer=Apple",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products",
								"FindByManufacturer"
							],
							"query": [
								{
									"key": "manufacturer",
									"value": "Apple"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск товаров с бесплатной доставкой",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/products/FindByShipping?freeShipping=true",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products",
								"FindByShipping"
							],
							"query": [
								{
									"key": "freeShipping",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Фильтрация товаров",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/products/filter?category=Phone&manufacturer=Apple&freeShipping=true&minPrice=1&maxPrice=100000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products",
								"filter"
							],
							"query": [
								{
									"key": "category",
									"value": "Phone"
								},
								{
									"key": "manufacturer",
									"value": "Apple"
								},
								{
									"key": "freeShipping",
									"value": "true"
								},
								{
									"key": "minPrice",
									"value": "1"
								},
								{
									"key": "maxPrice",
									"value": "100000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Добавление нового пользователя",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Пользователь успешно добавлен",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Неверные данные пользователя",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Регистрация нового пользователя",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": [
						{
							"name": "Регистрация выполнена успешно",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Неверные данные пользователя или пользователь уже существует",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Авторизация пользователя",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Вход выполнен успешно",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Неверные данные пользователя",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Получение всех user_id и login пользователей",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Успешный запрос",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"user_id\": \"<integer>\",\n    \"login\": \"<string>\"\n  },\n  {\n    \"user_id\": \"<integer>\",\n    \"login\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Ошибка сервера",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Удаляет пользователя по ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "<integer>",
									"description": "(Required) Уникальный идентификатор пользователя"
								}
							]
						}
					},
					"response": [
						{
							"name": "Пользователь успешно удалён",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Пользователь не найден",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "Добавляет товар в корзину пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productId\": \"<integer>\",\n  \"quantity\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cart",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cart"
							]
						}
					},
					"response": [
						{
							"name": "Товар успешно добавлен в корзину",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productId\": \"<integer>\",\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Неверный запрос",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productId\": \"<integer>\",\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Пользователь не авторизован",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productId\": \"<integer>\",\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ошибка сервера",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productId\": \"<integer>\",\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Возвращает содержимое корзины пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/getCart",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getCart"
							]
						}
					},
					"response": [
						{
							"name": "Содержимое корзины успешно получено",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCart"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Пользователь не авторизован",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCart"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ошибка сервера",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCart"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Обновляет количество товара в корзине пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"quantity\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cart/:cartItemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cart",
								":cartItemId"
							],
							"variable": [
								{
									"key": "cartItemId",
									"value": "<integer>",
									"description": "(Required) Идентификатор элемента в корзине"
								}
							]
						}
					},
					"response": [
						{
							"name": "Количество товара в корзине обновлено",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cart/:cartItemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart",
										":cartItemId"
									],
									"variable": [
										{
											"key": "cartItemId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Неверный запрос",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cart/:cartItemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart",
										":cartItemId"
									],
									"variable": [
										{
											"key": "cartItemId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Пользователь не авторизован",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cart/:cartItemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart",
										":cartItemId"
									],
									"variable": [
										{
											"key": "cartItemId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Элемент корзины не найден",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cart/:cartItemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart",
										":cartItemId"
									],
									"variable": [
										{
											"key": "cartItemId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ошибка сервера",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cart/:cartItemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart",
										":cartItemId"
									],
									"variable": [
										{
											"key": "cartItemId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Удаляет товар из корзины пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cart/:cartItemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cart",
								":cartItemId"
							],
							"variable": [
								{
									"key": "cartItemId",
									"value": "<integer>",
									"description": "(Required) Идентификатор удаляемого элемента корзины"
								}
							]
						}
					},
					"response": [
						{
							"name": "Товар успешно удален из корзины",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cart/:cartItemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart",
										":cartItemId"
									],
									"variable": [
										{
											"key": "cartItemId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Неверный запрос",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cart/:cartItemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart",
										":cartItemId"
									],
									"variable": [
										{
											"key": "cartItemId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Пользователь не авторизован",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cart/:cartItemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart",
										":cartItemId"
									],
									"variable": [
										{
											"key": "cartItemId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Товар в корзине не найден",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cart/:cartItemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart",
										":cartItemId"
									],
									"variable": [
										{
											"key": "cartItemId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ошибка сервера",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cart/:cartItemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cart",
										":cartItemId"
									],
									"variable": [
										{
											"key": "cartItemId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Получение списка всех заказов пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user-orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user-orders"
							]
						}
					},
					"response": [
						{
							"name": "Список заказов успешно получен.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user-orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user-orders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Пользователь не авторизован.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user-orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user-orders"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ошибка сервера.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user-orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user-orders"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Создание заказа из товаров в корзине пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						},
						"description": "Создает новый заказ, перемещает все товары из корзины пользователя в заказ и очищает корзину."
					},
					"response": [
						{
							"name": "Заказ успешно создан.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Пользователь не авторизован.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ошибка сервера.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Удаление товара из заказа",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/:orderId/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								":orderId",
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "<integer>",
									"description": "(Required) Идентификатор заказа"
								},
								{
									"key": "productId",
									"value": "<integer>",
									"description": "(Required) Идентификатор товара"
								}
							]
						}
					},
					"response": [
						{
							"name": "Товар успешно удален из заказа.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/:orderId/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":orderId",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "orderId"
										},
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Неверный запрос.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/:orderId/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":orderId",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "orderId"
										},
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Пользователь не авторизован.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/:orderId/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":orderId",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "orderId"
										},
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Товар или заказ не найдены.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/:orderId/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":orderId",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "orderId"
										},
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ошибка сервера.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/:orderId/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":orderId",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "orderId"
										},
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Изменение количества товара в заказе",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"quantity\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders/:orderId/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								":orderId",
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "<integer>",
									"description": "(Required) Идентификатор заказа"
								},
								{
									"key": "productId",
									"value": "<integer>",
									"description": "(Required) Идентификатор товара"
								}
							]
						}
					},
					"response": [
						{
							"name": "Количество товара в заказе успешно обновлено.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders/:orderId/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":orderId",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "orderId"
										},
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Неверный запрос.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders/:orderId/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":orderId",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "orderId"
										},
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Пользователь не авторизован.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders/:orderId/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":orderId",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "orderId"
										},
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Товар или заказ не найдены.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders/:orderId/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":orderId",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "orderId"
										},
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ошибка сервера.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders/:orderId/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":orderId",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "orderId"
										},
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Обновление общей суммы заказов пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/update-orders-total",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"update-orders-total"
							]
						},
						"description": "Вызов этого метода приведет к пересчету и обновлению общей суммы всех неоплаченных заказов пользователя."
					},
					"response": [
						{
							"name": "Общая сумма заказов успешно обновлена. Возвращает общую сумму заказов.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/update-orders-total",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update-orders-total"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"ordersTotal\": \"<number>\"\n}"
						},
						{
							"name": "Пользователь не авторизован или токен недействителен.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/update-orders-total",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update-orders-total"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Внутренняя ошибка сервера.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/update-orders-total",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update-orders-total"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Получение данных об оплаченных заказах",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/orders-history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders-history"
							]
						},
						"description": "Получает данные об оплаченных заказах для авторизованного пользователя."
					},
					"response": [
						{
							"name": "Успешный запрос. Возвращает список оплаченных заказов.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/orders-history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"orders-history"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"order_id\": \"<integer>\",\n    \"payment_date\": \"<dateTime>\",\n    \"delivery_date\": \"<dateTime>\",\n    \"totalPrice\": \"<float>\",\n    \"productImage\": \"<string>\",\n    \"productName\": \"<string>\",\n    \"quantity\": \"<integer>\"\n  },\n  {\n    \"order_id\": \"<integer>\",\n    \"payment_date\": \"<dateTime>\",\n    \"delivery_date\": \"<dateTime>\",\n    \"totalPrice\": \"<float>\",\n    \"productImage\": \"<string>\",\n    \"productName\": \"<string>\",\n    \"quantity\": \"<integer>\"\n  }\n]"
						},
						{
							"name": "Ошибка аутентификации. Токен не предоставлен.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/orders-history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"orders-history"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Внутренняя ошибка сервера. Не удалось получить данные об оплаченных заказах.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/orders-history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"orders-history"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Payment",
			"item": [
				{
					"name": "Оплата заказов пользователя",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_type\": \"VISA\",\n  \"card_code\": \"<string>\",\n  \"expiry_month\": \"<integer>\",\n  \"expiry_year\": \"<integer>\",\n  \"cvv\": \"<string>\",\n  \"email\": \"<email>\",\n  \"email_paypal\": \"<email>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pay",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pay"
							]
						},
						"description": "Процесс оплаты заказов с использованием карты или PayPal. Валидация входных данных осуществляется в зависимости от выбранного метода оплаты."
					},
					"response": [
						{
							"name": "Платеж успешно проведен и заказы оплачены.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"card_type\": \"VISA\",\n  \"card_code\": \"<string>\",\n  \"expiry_month\": \"<integer>\",\n  \"expiry_year\": \"<integer>\",\n  \"cvv\": \"<string>\",\n  \"email\": \"<email>\",\n  \"email_paypal\": \"<email>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pay",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pay"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ошибка в данных карты или недостаточно средств/Данный тип карты или платежной системы не поддерживается.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"card_type\": \"VISA\",\n  \"card_code\": \"<string>\",\n  \"expiry_month\": \"<integer>\",\n  \"expiry_year\": \"<integer>\",\n  \"cvv\": \"<string>\",\n  \"email\": \"<email>\",\n  \"email_paypal\": \"<email>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pay",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pay"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Пользователь не авторизован.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"card_type\": \"VISA\",\n  \"card_code\": \"<string>\",\n  \"expiry_month\": \"<integer>\",\n  \"expiry_year\": \"<integer>\",\n  \"cvv\": \"<string>\",\n  \"email\": \"<email>\",\n  \"email_paypal\": \"<email>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pay",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pay"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ошибка сервера при обработке платежа.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"card_type\": \"VISA\",\n  \"card_code\": \"<string>\",\n  \"expiry_month\": \"<integer>\",\n  \"expiry_year\": \"<integer>\",\n  \"cvv\": \"<string>\",\n  \"email\": \"<email>\",\n  \"email_paypal\": \"<email>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pay",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pay"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Обновление балансов карт и PayPal через GET запрос",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/updateBalances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"updateBalances"
							]
						},
						"description": "Использует GET запрос для обновления баланса на всех картах, кроме card_id = 7 и 8, и всех PayPal учетных записях до 2000. Авторизация и проверка статуса не требуются."
					},
					"response": [
						{
							"name": "Балансы успешно обновлены.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updateBalances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updateBalances"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Внутренняя ошибка сервера при обработке запроса.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updateBalances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updateBalances"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "productIds",
			"value": ""
		}
	]
}